[project]
name = "garminconnect-api"
version = "0.1.0"
description = "REST API wrapper for Garmin Connect"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.6.0",
    "garminconnect>=0.1.50",
    "python-multipart>=0.0.9",
    "email-validator>=2.1.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "slowapi>=0.1.8",
    "garth>=0.5.2",
    "requests>=2.0.0",
    "requests-oauthlib>=1.3.1",
    "lxml>=5.3.1",
]
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
keywords=["garmin connect", "api", "garmin"]
requires-python = ">=3.9"
[project.urls]
"Homepage" = "https://github.com/cyberjunky/python-garminconnect"
"Bug Tracker" = "https://github.com/cyberjunky/python-garminconnect/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "--ignore=__pypackages__ --ignore-glob=*.yaml"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "httpx>=0.26.0",
    "black>=24.1.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "ruff>=0.2.0",
]
linting = [
    "black",
    "ruff",
    "mypy",
    "isort",
    "types-requests",
]
testing = [
    "coverage",
    "pytest",
    "pytest-vcr",
]
example = [
    "readchar",
]

[tool.pdm]
distribution = true
[tool.pdm.dev-dependencies]
dev = [
    "ipython",
    "ipdb",
    "ipykernel",
    "pandas",
    "matplotlib",
]
linting = [
    "black",
    "ruff",
    "mypy",
    "isort",
    "types-requests",
]
testing = [
    "coverage",
    "pytest",
    "pytest-vcr",
]
example = [
    "readchar",
]

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.ruff]
line-length = 100
target-version = "py39"
